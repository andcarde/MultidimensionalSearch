2022-11-03 00:04:48,579; 236 ; INFO ; THREAD: main; Scope.java; addSignalToScope; 35; ROOT; scop = sincos500 add signal signal {d0, has 0 samples}; 
2022-11-03 00:04:48,583; 240 ; INFO ; THREAD: main; Scope.java; addSignalToScope; 35; ROOT; scop = sincos500 add signal signal {d1, has 0 samples}; 
2022-11-03 00:04:48,658; 315 ; TRACE; THREAD: main; XStlContext.java; <clinit>; 63; ROOT; CONST_SIGNAL_BOOL_TRUE name is: 'true'; 
2022-11-03 00:04:48,658; 315 ; TRACE; THREAD: main; XStlContext.java; <clinit>; 65; ROOT; CONST_SIGNAL_BOOL_FALSE name is: 'false'; 
2022-11-03 00:04:48,658; 315 ; TRACE; THREAD: main; XStlContext.java; <clinit>; 67; ROOT; CONST_SIGNAL_REAL_ZERO name is: '0.0'; 
2022-11-03 00:04:48,658; 315 ; TRACE; THREAD: main; XStlContext.java; <clinit>; 69; ROOT; CONST_SIGNAL_REAL_ONE name is: '1.0'; 
2022-11-03 00:04:48,658; 315 ; TRACE; THREAD: main; XStlContext.java; <clinit>; 71; ROOT; CONST_SIGNAL_REAL_TWO name is: '2.0'; 
2022-11-03 00:04:48,665; 322 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 94; ROOT; SPEC SPEC unnamed; 
2022-11-03 00:04:48,666; 323 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit StlSpecification 'unnamed' key= 'null'; 
2022-11-03 00:04:48,666; 323 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 154; ROOT;  visit list 'definitions' key= '( def_d0)'; 
2022-11-03 00:04:48,666; 323 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 116; ROOT;  visit defVar 'd0': type is real  key= 'def_d0'; 
2022-11-03 00:04:48,666; 323 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 154; ROOT;  visit list 'assertions' key= '( assertion_prop)'; 
2022-11-03 00:04:48,666; 323 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit assertion 'prop' key= 'assertion_prop'; 
2022-11-03 00:04:48,666; 323 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit id 'prop' key= 'prop'; 
2022-11-03 00:04:48,667; 324 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit propOpUnary 'always' key= '(always (and (<= d0 (-_unary 2.0)) (>= d0 (-_unary (-_unary 2.0)))))'; 
2022-11-03 00:04:48,667; 324 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 154; ROOT;  visit list 'operands' key= '( (and (<= d0 (-_unary 2.0)) (>= d0 (-_unary (-_unary 2.0)))))'; 
2022-11-03 00:04:48,667; 324 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit propOpBinary 'and' key= '(and (<= d0 (-_unary 2.0)) (>= d0 (-_unary (-_unary 2.0))))'; 
2022-11-03 00:04:48,668; 325 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 154; ROOT;  visit list 'operands' key= '( (<= d0 (-_unary 2.0)) (>= d0 (-_unary (-_unary 2.0))))'; 
2022-11-03 00:04:48,668; 325 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit comparison '<=' key= '(<= d0 (-_unary 2.0))'; 
2022-11-03 00:04:48,668; 325 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 292; ROOT;  visit symLink 'd0' key= 'd0'; 
2022-11-03 00:04:48,668; 325 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit exprOpUnary '-_unary' key= '(-_unary 2.0)'; 
2022-11-03 00:04:48,668; 325 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 154; ROOT;  visit list 'operands' key= '( 2.0)'; 
2022-11-03 00:04:48,668; 325 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 171; ROOT;  visitExprLiteral literalREAL 'real2.0' key= '2.0'; 
2022-11-03 00:04:48,668; 325 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit comparison '>=' key= '(>= d0 (-_unary (-_unary 2.0)))'; 
2022-11-03 00:04:48,669; 326 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 292; ROOT;  visit symLink 'd0' key= 'd0'; 
2022-11-03 00:04:48,669; 326 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit exprOpUnary '-_unary' key= '(-_unary (-_unary 2.0))'; 
2022-11-03 00:04:48,669; 326 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 154; ROOT;  visit list 'operands' key= '( (-_unary 2.0))'; 
2022-11-03 00:04:48,669; 326 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit exprOpUnary '-_unary' key= '(-_unary 2.0)'; 
2022-11-03 00:04:48,669; 326 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 154; ROOT;  visit list 'operands' key= '( 2.0)'; 
2022-11-03 00:04:48,669; 326 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 171; ROOT;  visitExprLiteral literalREAL 'real2.0' key= '2.0'; 
2022-11-03 00:04:48,669; 326 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 154; ROOT;  visit list 'measurements' key= '()'; 
2022-11-03 00:04:48,670; 327 ; INFO ; THREAD: main; VcdBasicCompiler.java; parseBiggerPart; 213; ROOT; am I EDT? = false; 
2022-11-03 00:04:48,711; 368 ; INFO ; THREAD: Thread-1; Scope.java; addSignalToScope; 35; ROOT; scop = sincos500 add signal signal {d0, has 0 samples}; 
2022-11-03 00:04:48,713; 370 ; INFO ; THREAD: Thread-0; VcdBasicCompiler.java; doInBackground; 129; ROOT; am I EDT? = false; 
2022-11-03 00:04:48,713; 370 ; INFO ; THREAD: Thread-1; Scope.java; addSignalToScope; 35; ROOT; scop = sincos500 add signal signal {d1, has 0 samples}; 
2022-11-03 00:04:48,714; 371 ; INFO ; THREAD: Thread-0; VcdBasicCompiler.java; doInBackground; 136; ROOT; am I EDT? = false; 
2022-11-03 00:04:49,714; 1371; INFO ; THREAD: Thread-0; VcdBasicCompiler.java; doInBackground; 136; ROOT; am I EDT? = false; 
2022-11-03 00:04:50,716; 2373; INFO ; THREAD: Thread-0; VcdBasicCompiler.java; doInBackground; 136; ROOT; am I EDT? = false; 
2022-11-03 00:04:51,718; 3375; INFO ; THREAD: Thread-0; VcdBasicCompiler.java; doInBackground; 136; ROOT; am I EDT? = false; 
2022-11-03 00:04:52,719; 4376; INFO ; THREAD: Thread-0; VcdBasicCompiler.java; doInBackground; 136; ROOT; am I EDT? = false; 
2022-11-03 00:04:53,721; 5378; INFO ; THREAD: Thread-0; VcdBasicCompiler.java; doInBackground; 136; ROOT; am I EDT? = false; 
2022-11-03 00:04:54,723; 6380; INFO ; THREAD: Thread-0; VcdBasicCompiler.java; doInBackground; 136; ROOT; am I EDT? = false; 
2022-11-03 00:04:55,725; 7382; INFO ; THREAD: Thread-0; VcdBasicCompiler.java; doInBackground; 136; ROOT; am I EDT? = false; 
2022-11-03 00:04:56,310; 7967; TRACE; THREAD: main; VisitorEvalContext.java; visit; 105; ROOT;  XStlNode type is StlSpecification 'unnamed' key= 'null'; 
2022-11-03 00:04:56,311; 7968; TRACE; THREAD: main; VisitorEvalContext.java; visit; 105; ROOT;  XStlNode type is list 'definitions' key= '( def_d0)'; 
2022-11-03 00:04:56,312; 7969; TRACE; THREAD: main; VisitorEvalContext.java; visit; 105; ROOT;  XStlNode type is list 'assertions' key= '( assertion_prop)'; 
2022-11-03 00:04:56,313; 7970; TRACE; THREAD: main; VisitorEvalContext.java; visit; 340; ROOT; symLink 'd0' key= 'd0'; 
2022-11-03 00:04:56,313; 7970; TRACE; THREAD: main; VisitorEvalContext.java; visit; 316; ROOT; exprOpUnary '-_unary' key= '(-_unary 2.0)'; 
2022-11-03 00:04:56,348; 8005; TRACE; THREAD: main; OperatorFactory.java; getAbstractBinaryOperator; 436; ROOT; jamtSignal.ContinuousRealSignal LESSEREQUAL jamtSignal.constant.ConstantRealSignal; 
2022-11-03 00:04:56,354; 8011; DEBUG; THREAD: main; LinearInterpolation.java; constantComparisonOperationHelper; 432; ROOT; operationName: LESSEQUAL, retSignal:'(d0 <= MINUS(2.0))'; 
2022-11-03 00:04:56,546; 8203; DEBUG; THREAD: main; AbstractBinaryOperator.java; compute; 52; ROOT; Computed signal (d0 <= MINUS(2.0)), samples: signal {(d0 <= MINUS(2.0)), has 1 samples}: {[0.0,9.99999E17)=false} ; 
2022-11-03 00:04:56,547; 8204; TRACE; THREAD: main; VisitorEvalContext.java; visit; 340; ROOT; symLink 'd0' key= 'd0'; 
2022-11-03 00:04:56,552; 8209; TRACE; THREAD: main; VisitorEvalContext.java; visit; 316; ROOT; exprOpUnary '-_unary' key= '(-_unary (-_unary 2.0))'; 
2022-11-03 00:04:56,552; 8209; TRACE; THREAD: main; VisitorEvalContext.java; visit; 316; ROOT; exprOpUnary '-_unary' key= '(-_unary 2.0)'; 
2022-11-03 00:04:56,553; 8210; TRACE; THREAD: main; OperatorFactory.java; getAbstractBinaryOperator; 436; ROOT; jamtSignal.ContinuousRealSignal GREATEREQUAL jamtSignal.constant.ConstantRealSignal; 
2022-11-03 00:04:56,556; 8213; DEBUG; THREAD: main; LinearInterpolation.java; constantComparisonOperationHelper; 432; ROOT; operationName: GREATEREQUAL, retSignal:'(d0 >= MINUS(MINUS(2.0)))'; 
2022-11-03 00:04:56,723; 8380; DEBUG; THREAD: main; AbstractBinaryOperator.java; compute; 52; ROOT; Computed signal (d0 >= MINUS(MINUS(2.0))), samples: signal {(d0 >= MINUS(MINUS(2.0))), has 1 samples}: {[0.0,9.99999E17)=false} ; 
2022-11-03 00:04:56,723; 8380; TRACE; THREAD: main; OperatorFactory.java; getAbstractBinaryOperator; 436; ROOT; jamtSignal.ContinuousBoolSignal AND jamtSignal.ContinuousBoolSignal; 
2022-11-03 00:04:56,729; 8386; DEBUG; THREAD: main; AbstractBinaryOperator.java; compute; 52; ROOT; Computed signal ((d0 <= MINUS(2.0)) and (d0 >= MINUS(MINUS(2.0)))), samples: signal {((d0 <= MINUS(2.0)) and (d0 >= MINUS(MINUS(2.0)))), has 1 samples}: {[0.0,9.99999E17)=false} ; 
2022-11-03 00:04:56,731; 8388; TRACE; THREAD: main; VisitorEvalContext.java; visit; 105; ROOT;  XStlNode type is list 'measurements' key= '()'; 
2022-11-03 00:04:56,733; 8390; TRACE; THREAD: main; AssertionReportGenerator.java; visit; 189; ROOT; DIAG Visited a Stl List; 
2022-11-03 00:04:56,734; 8391; TRACE; THREAD: main; AssertionReportGenerator.java; visit; 171; ROOT; DIAG Visited a Stl ID; 
2022-11-03 00:04:56,734; 8391; TRACE; THREAD: main; AssertionReportGenerator.java; visit; 189; ROOT; DIAG Visited a Stl List; 
2022-11-03 00:04:56,734; 8391; TRACE; THREAD: main; AssertionReportGenerator.java; visit; 189; ROOT; DIAG Visited a Stl List; 
