2022-11-03 09:58:20,734; 117 ; INFO ; THREAD: main; Scope.java; addSignalToScope; 35; ROOT; scop = sincos500 add signal signal {d0, has 0 samples}; 
2022-11-03 09:58:20,736; 119 ; INFO ; THREAD: main; Scope.java; addSignalToScope; 35; ROOT; scop = sincos500 add signal signal {d1, has 0 samples}; 
2022-11-03 09:58:20,768; 151 ; TRACE; THREAD: main; XStlContext.java; <clinit>; 63; ROOT; CONST_SIGNAL_BOOL_TRUE name is: 'true'; 
2022-11-03 09:58:20,768; 151 ; TRACE; THREAD: main; XStlContext.java; <clinit>; 65; ROOT; CONST_SIGNAL_BOOL_FALSE name is: 'false'; 
2022-11-03 09:58:20,768; 151 ; TRACE; THREAD: main; XStlContext.java; <clinit>; 67; ROOT; CONST_SIGNAL_REAL_ZERO name is: '0.0'; 
2022-11-03 09:58:20,768; 151 ; TRACE; THREAD: main; XStlContext.java; <clinit>; 69; ROOT; CONST_SIGNAL_REAL_ONE name is: '1.0'; 
2022-11-03 09:58:20,768; 151 ; TRACE; THREAD: main; XStlContext.java; <clinit>; 71; ROOT; CONST_SIGNAL_REAL_TWO name is: '2.0'; 
2022-11-03 09:58:20,772; 155 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 94; ROOT; SPEC SPEC unnamed; 
2022-11-03 09:58:20,772; 155 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit StlSpecification 'unnamed' key= 'null'; 
2022-11-03 09:58:20,772; 155 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 154; ROOT;  visit list 'definitions' key= '( def_d0)'; 
2022-11-03 09:58:20,772; 155 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 116; ROOT;  visit defVar 'd0': type is real  key= 'def_d0'; 
2022-11-03 09:58:20,772; 155 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 154; ROOT;  visit list 'assertions' key= '( assertion_prop)'; 
2022-11-03 09:58:20,772; 155 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit assertion 'prop' key= 'assertion_prop'; 
2022-11-03 09:58:20,772; 155 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit id 'prop' key= 'prop'; 
2022-11-03 09:58:20,773; 156 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit propOpUnary 'always' key= '(always (and (<= d0 1.697729919219375) (>= d0 (-_unary 1.356594904919862))))'; 
2022-11-03 09:58:20,773; 156 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 154; ROOT;  visit list 'operands' key= '( (and (<= d0 1.697729919219375) (>= d0 (-_unary 1.356594904919862))))'; 
2022-11-03 09:58:20,773; 156 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit propOpBinary 'and' key= '(and (<= d0 1.697729919219375) (>= d0 (-_unary 1.356594904919862)))'; 
2022-11-03 09:58:20,773; 156 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 154; ROOT;  visit list 'operands' key= '( (<= d0 1.697729919219375) (>= d0 (-_unary 1.356594904919862)))'; 
2022-11-03 09:58:20,773; 156 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit comparison '<=' key= '(<= d0 1.697729919219375)'; 
2022-11-03 09:58:20,773; 156 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 292; ROOT;  visit symLink 'd0' key= 'd0'; 
2022-11-03 09:58:20,773; 156 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 171; ROOT;  visitExprLiteral literalREAL 'real1.697729919219375' key= '1.697729919219375'; 
2022-11-03 09:58:20,774; 157 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 196; ROOT;  signal added asociated to the key: '1.697729919219375'; 
2022-11-03 09:58:20,774; 157 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit comparison '>=' key= '(>= d0 (-_unary 1.356594904919862))'; 
2022-11-03 09:58:20,774; 157 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 292; ROOT;  visit symLink 'd0' key= 'd0'; 
2022-11-03 09:58:20,775; 158 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit exprOpUnary '-_unary' key= '(-_unary 1.356594904919862)'; 
2022-11-03 09:58:20,775; 158 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 154; ROOT;  visit list 'operands' key= '( 1.356594904919862)'; 
2022-11-03 09:58:20,775; 158 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 171; ROOT;  visitExprLiteral literalREAL 'real1.356594904919862' key= '1.356594904919862'; 
2022-11-03 09:58:20,775; 158 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 196; ROOT;  signal added asociated to the key: '1.356594904919862'; 
2022-11-03 09:58:20,775; 158 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 154; ROOT;  visit list 'measurements' key= '()'; 
2022-11-03 09:58:20,775; 158 ; INFO ; THREAD: main; VcdBasicCompiler.java; parseBiggerPart; 213; ROOT; am I EDT? = false; 
2022-11-03 09:58:20,794; 177 ; INFO ; THREAD: Thread-0; VcdBasicCompiler.java; doInBackground; 129; ROOT; am I EDT? = false; 
2022-11-03 09:58:20,794; 177 ; INFO ; THREAD: Thread-1; Scope.java; addSignalToScope; 35; ROOT; scop = sincos500 add signal signal {d0, has 0 samples}; 
2022-11-03 09:58:20,794; 177 ; INFO ; THREAD: Thread-0; VcdBasicCompiler.java; doInBackground; 136; ROOT; am I EDT? = false; 
2022-11-03 09:58:20,794; 177 ; INFO ; THREAD: Thread-1; Scope.java; addSignalToScope; 35; ROOT; scop = sincos500 add signal signal {d1, has 0 samples}; 
2022-11-03 09:58:21,794; 1177; INFO ; THREAD: Thread-0; VcdBasicCompiler.java; doInBackground; 136; ROOT; am I EDT? = false; 
2022-11-03 09:58:22,795; 2178; INFO ; THREAD: Thread-0; VcdBasicCompiler.java; doInBackground; 136; ROOT; am I EDT? = false; 
2022-11-03 09:58:23,804; 3187; INFO ; THREAD: Thread-0; VcdBasicCompiler.java; doInBackground; 136; ROOT; am I EDT? = false; 
2022-11-03 09:58:24,804; 4187; INFO ; THREAD: Thread-0; VcdBasicCompiler.java; doInBackground; 136; ROOT; am I EDT? = false; 
2022-11-03 09:58:25,807; 5190; INFO ; THREAD: Thread-0; VcdBasicCompiler.java; doInBackground; 136; ROOT; am I EDT? = false; 
2022-11-03 09:58:26,154; 5537; TRACE; THREAD: main; VisitorEvalContext.java; visit; 105; ROOT;  XStlNode type is StlSpecification 'unnamed' key= 'null'; 
2022-11-03 09:58:26,154; 5537; TRACE; THREAD: main; VisitorEvalContext.java; visit; 105; ROOT;  XStlNode type is list 'definitions' key= '( def_d0)'; 
2022-11-03 09:58:26,154; 5537; TRACE; THREAD: main; VisitorEvalContext.java; visit; 105; ROOT;  XStlNode type is list 'assertions' key= '( assertion_prop)'; 
2022-11-03 09:58:26,155; 5538; TRACE; THREAD: main; VisitorEvalContext.java; visit; 340; ROOT; symLink 'd0' key= 'd0'; 
2022-11-03 09:58:26,171; 5554; TRACE; THREAD: main; OperatorFactory.java; getAbstractBinaryOperator; 436; ROOT; jamtSignal.ContinuousRealSignal LESSEREQUAL jamtSignal.constant.ConstantRealSignal; 
2022-11-03 09:58:26,174; 5557; DEBUG; THREAD: main; LinearInterpolation.java; constantComparisonOperationHelper; 432; ROOT; operationName: LESSEQUAL, retSignal:'(d0 <= 1.697729919219375)'; 
2022-11-03 09:58:26,221; 5604; DEBUG; THREAD: main; AbstractBinaryOperator.java; compute; 52; ROOT; Computed signal (d0 <= 1.697729919219375), samples: signal {(d0 <= 1.697729919219375), has 1 samples}: {[0.0,9.99999E17)=true} ; 
2022-11-03 09:58:26,221; 5604; TRACE; THREAD: main; VisitorEvalContext.java; visit; 340; ROOT; symLink 'd0' key= 'd0'; 
2022-11-03 09:58:26,221; 5604; TRACE; THREAD: main; VisitorEvalContext.java; visit; 316; ROOT; exprOpUnary '-_unary' key= '(-_unary 1.356594904919862)'; 
2022-11-03 09:58:26,222; 5605; TRACE; THREAD: main; OperatorFactory.java; getAbstractBinaryOperator; 436; ROOT; jamtSignal.ContinuousRealSignal GREATEREQUAL jamtSignal.constant.ConstantRealSignal; 
2022-11-03 09:58:26,223; 5606; DEBUG; THREAD: main; LinearInterpolation.java; constantComparisonOperationHelper; 432; ROOT; operationName: GREATEREQUAL, retSignal:'(d0 >= MINUS(1.356594904919862))'; 
2022-11-03 09:58:26,258; 5641; DEBUG; THREAD: main; AbstractBinaryOperator.java; compute; 52; ROOT; Computed signal (d0 >= MINUS(1.356594904919862)), samples: signal {(d0 >= MINUS(1.356594904919862)), has 1 samples}: {[0.0,9.99999E17)=true} ; 
2022-11-03 09:58:26,258; 5641; TRACE; THREAD: main; OperatorFactory.java; getAbstractBinaryOperator; 436; ROOT; jamtSignal.ContinuousBoolSignal AND jamtSignal.ContinuousBoolSignal; 
2022-11-03 09:58:26,260; 5643; DEBUG; THREAD: main; AbstractBinaryOperator.java; compute; 52; ROOT; Computed signal ((d0 <= 1.697729919219375) and (d0 >= MINUS(1.356594904919862))), samples: signal {((d0 <= 1.697729919219375) and (d0 >= MINUS(1.356594904919862))), has 1 samples}: {[0.0,9.99999E17)=true} ; 
2022-11-03 09:58:26,260; 5643; TRACE; THREAD: main; VisitorEvalContext.java; visit; 105; ROOT;  XStlNode type is list 'measurements' key= '()'; 
2022-11-03 09:58:26,261; 5644; TRACE; THREAD: main; AssertionReportGenerator.java; visit; 189; ROOT; DIAG Visited a Stl List; 
2022-11-03 09:58:26,261; 5644; TRACE; THREAD: main; AssertionReportGenerator.java; visit; 171; ROOT; DIAG Visited a Stl ID; 
2022-11-03 09:58:26,261; 5644; TRACE; THREAD: main; AssertionReportGenerator.java; visit; 189; ROOT; DIAG Visited a Stl List; 
2022-11-03 09:58:26,262; 5645; TRACE; THREAD: main; AssertionReportGenerator.java; visit; 189; ROOT; DIAG Visited a Stl List; 
