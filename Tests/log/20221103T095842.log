2022-11-03 09:58:42,419; 107 ; INFO ; THREAD: main; Scope.java; addSignalToScope; 35; ROOT; scop = sincos500 add signal signal {d0, has 0 samples}; 
2022-11-03 09:58:42,421; 109 ; INFO ; THREAD: main; Scope.java; addSignalToScope; 35; ROOT; scop = sincos500 add signal signal {d1, has 0 samples}; 
2022-11-03 09:58:42,452; 140 ; TRACE; THREAD: main; XStlContext.java; <clinit>; 63; ROOT; CONST_SIGNAL_BOOL_TRUE name is: 'true'; 
2022-11-03 09:58:42,453; 141 ; TRACE; THREAD: main; XStlContext.java; <clinit>; 65; ROOT; CONST_SIGNAL_BOOL_FALSE name is: 'false'; 
2022-11-03 09:58:42,453; 141 ; TRACE; THREAD: main; XStlContext.java; <clinit>; 67; ROOT; CONST_SIGNAL_REAL_ZERO name is: '0.0'; 
2022-11-03 09:58:42,453; 141 ; TRACE; THREAD: main; XStlContext.java; <clinit>; 69; ROOT; CONST_SIGNAL_REAL_ONE name is: '1.0'; 
2022-11-03 09:58:42,453; 141 ; TRACE; THREAD: main; XStlContext.java; <clinit>; 71; ROOT; CONST_SIGNAL_REAL_TWO name is: '2.0'; 
2022-11-03 09:58:42,456; 144 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 94; ROOT; SPEC SPEC unnamed; 
2022-11-03 09:58:42,457; 145 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit StlSpecification 'unnamed' key= 'null'; 
2022-11-03 09:58:42,457; 145 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 154; ROOT;  visit list 'definitions' key= '( def_d0)'; 
2022-11-03 09:58:42,457; 145 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 116; ROOT;  visit defVar 'd0': type is real  key= 'def_d0'; 
2022-11-03 09:58:42,457; 145 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 154; ROOT;  visit list 'assertions' key= '( assertion_prop)'; 
2022-11-03 09:58:42,457; 145 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit assertion 'prop' key= 'assertion_prop'; 
2022-11-03 09:58:42,457; 145 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit id 'prop' key= 'prop'; 
2022-11-03 09:58:42,458; 146 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit propOpUnary 'always' key= '(always (and (<= d0 2.0) (>= d0 (-_unary 2.0))))'; 
2022-11-03 09:58:42,458; 146 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 154; ROOT;  visit list 'operands' key= '( (and (<= d0 2.0) (>= d0 (-_unary 2.0))))'; 
2022-11-03 09:58:42,458; 146 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit propOpBinary 'and' key= '(and (<= d0 2.0) (>= d0 (-_unary 2.0)))'; 
2022-11-03 09:58:42,458; 146 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 154; ROOT;  visit list 'operands' key= '( (<= d0 2.0) (>= d0 (-_unary 2.0)))'; 
2022-11-03 09:58:42,458; 146 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit comparison '<=' key= '(<= d0 2.0)'; 
2022-11-03 09:58:42,458; 146 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 292; ROOT;  visit symLink 'd0' key= 'd0'; 
2022-11-03 09:58:42,458; 146 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 171; ROOT;  visitExprLiteral literalREAL 'real2.0' key= '2.0'; 
2022-11-03 09:58:42,459; 147 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit comparison '>=' key= '(>= d0 (-_unary 2.0))'; 
2022-11-03 09:58:42,459; 147 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 292; ROOT;  visit symLink 'd0' key= 'd0'; 
2022-11-03 09:58:42,459; 147 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit exprOpUnary '-_unary' key= '(-_unary 2.0)'; 
2022-11-03 09:58:42,459; 147 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 154; ROOT;  visit list 'operands' key= '( 2.0)'; 
2022-11-03 09:58:42,459; 147 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 171; ROOT;  visitExprLiteral literalREAL 'real2.0' key= '2.0'; 
2022-11-03 09:58:42,459; 147 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 154; ROOT;  visit list 'measurements' key= '()'; 
2022-11-03 09:58:42,460; 148 ; INFO ; THREAD: main; VcdBasicCompiler.java; parseBiggerPart; 213; ROOT; am I EDT? = false; 
2022-11-03 09:58:42,476; 164 ; INFO ; THREAD: Thread-0; VcdBasicCompiler.java; doInBackground; 129; ROOT; am I EDT? = false; 
2022-11-03 09:58:42,476; 164 ; INFO ; THREAD: Thread-1; Scope.java; addSignalToScope; 35; ROOT; scop = sincos500 add signal signal {d0, has 0 samples}; 
2022-11-03 09:58:42,476; 164 ; INFO ; THREAD: Thread-0; VcdBasicCompiler.java; doInBackground; 136; ROOT; am I EDT? = false; 
2022-11-03 09:58:42,477; 165 ; INFO ; THREAD: Thread-1; Scope.java; addSignalToScope; 35; ROOT; scop = sincos500 add signal signal {d1, has 0 samples}; 
2022-11-03 09:58:43,477; 1165; INFO ; THREAD: Thread-0; VcdBasicCompiler.java; doInBackground; 136; ROOT; am I EDT? = false; 
2022-11-03 09:58:44,477; 2165; INFO ; THREAD: Thread-0; VcdBasicCompiler.java; doInBackground; 136; ROOT; am I EDT? = false; 
2022-11-03 09:58:45,478; 3166; INFO ; THREAD: Thread-0; VcdBasicCompiler.java; doInBackground; 136; ROOT; am I EDT? = false; 
2022-11-03 09:58:46,483; 4171; INFO ; THREAD: Thread-0; VcdBasicCompiler.java; doInBackground; 136; ROOT; am I EDT? = false; 
2022-11-03 09:58:47,160; 4848; TRACE; THREAD: main; VisitorEvalContext.java; visit; 105; ROOT;  XStlNode type is StlSpecification 'unnamed' key= 'null'; 
2022-11-03 09:58:47,160; 4848; TRACE; THREAD: main; VisitorEvalContext.java; visit; 105; ROOT;  XStlNode type is list 'definitions' key= '( def_d0)'; 
2022-11-03 09:58:47,161; 4849; TRACE; THREAD: main; VisitorEvalContext.java; visit; 105; ROOT;  XStlNode type is list 'assertions' key= '( assertion_prop)'; 
2022-11-03 09:58:47,161; 4849; TRACE; THREAD: main; VisitorEvalContext.java; visit; 340; ROOT; symLink 'd0' key= 'd0'; 
2022-11-03 09:58:47,185; 4873; TRACE; THREAD: main; OperatorFactory.java; getAbstractBinaryOperator; 436; ROOT; jamtSignal.ContinuousRealSignal LESSEREQUAL jamtSignal.constant.ConstantRealSignal; 
2022-11-03 09:58:47,188; 4876; DEBUG; THREAD: main; LinearInterpolation.java; constantComparisonOperationHelper; 432; ROOT; operationName: LESSEQUAL, retSignal:'(d0 <= 2.0)'; 
2022-11-03 09:58:47,236; 4924; DEBUG; THREAD: main; AbstractBinaryOperator.java; compute; 52; ROOT; Computed signal (d0 <= 2.0), samples: signal {(d0 <= 2.0), has 1 samples}: {[0.0,9.99999E17)=true} ; 
2022-11-03 09:58:47,236; 4924; TRACE; THREAD: main; VisitorEvalContext.java; visit; 340; ROOT; symLink 'd0' key= 'd0'; 
2022-11-03 09:58:47,236; 4924; TRACE; THREAD: main; VisitorEvalContext.java; visit; 316; ROOT; exprOpUnary '-_unary' key= '(-_unary 2.0)'; 
2022-11-03 09:58:47,237; 4925; TRACE; THREAD: main; OperatorFactory.java; getAbstractBinaryOperator; 436; ROOT; jamtSignal.ContinuousRealSignal GREATEREQUAL jamtSignal.constant.ConstantRealSignal; 
2022-11-03 09:58:47,238; 4926; DEBUG; THREAD: main; LinearInterpolation.java; constantComparisonOperationHelper; 432; ROOT; operationName: GREATEREQUAL, retSignal:'(d0 >= MINUS(2.0))'; 
2022-11-03 09:58:47,279; 4967; DEBUG; THREAD: main; AbstractBinaryOperator.java; compute; 52; ROOT; Computed signal (d0 >= MINUS(2.0)), samples: signal {(d0 >= MINUS(2.0)), has 1 samples}: {[0.0,9.99999E17)=true} ; 
2022-11-03 09:58:47,280; 4968; TRACE; THREAD: main; OperatorFactory.java; getAbstractBinaryOperator; 436; ROOT; jamtSignal.ContinuousBoolSignal AND jamtSignal.ContinuousBoolSignal; 
2022-11-03 09:58:47,281; 4969; DEBUG; THREAD: main; AbstractBinaryOperator.java; compute; 52; ROOT; Computed signal ((d0 <= 2.0) and (d0 >= MINUS(2.0))), samples: signal {((d0 <= 2.0) and (d0 >= MINUS(2.0))), has 1 samples}: {[0.0,9.99999E17)=true} ; 
2022-11-03 09:58:47,282; 4970; TRACE; THREAD: main; VisitorEvalContext.java; visit; 105; ROOT;  XStlNode type is list 'measurements' key= '()'; 
2022-11-03 09:58:47,283; 4971; TRACE; THREAD: main; AssertionReportGenerator.java; visit; 189; ROOT; DIAG Visited a Stl List; 
2022-11-03 09:58:47,283; 4971; TRACE; THREAD: main; AssertionReportGenerator.java; visit; 171; ROOT; DIAG Visited a Stl ID; 
2022-11-03 09:58:47,283; 4971; TRACE; THREAD: main; AssertionReportGenerator.java; visit; 189; ROOT; DIAG Visited a Stl List; 
2022-11-03 09:58:47,283; 4971; TRACE; THREAD: main; AssertionReportGenerator.java; visit; 189; ROOT; DIAG Visited a Stl List; 
