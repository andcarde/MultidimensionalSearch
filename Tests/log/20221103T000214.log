2022-11-03 00:02:14,615; 118 ; INFO ; THREAD: main; Scope.java; addSignalToScope; 35; ROOT; scop = sincos500 add signal signal {d0, has 0 samples}; 
2022-11-03 00:02:14,617; 120 ; INFO ; THREAD: main; Scope.java; addSignalToScope; 35; ROOT; scop = sincos500 add signal signal {d1, has 0 samples}; 
2022-11-03 00:02:14,655; 158 ; TRACE; THREAD: main; XStlContext.java; <clinit>; 63; ROOT; CONST_SIGNAL_BOOL_TRUE name is: 'true'; 
2022-11-03 00:02:14,655; 158 ; TRACE; THREAD: main; XStlContext.java; <clinit>; 65; ROOT; CONST_SIGNAL_BOOL_FALSE name is: 'false'; 
2022-11-03 00:02:14,655; 158 ; TRACE; THREAD: main; XStlContext.java; <clinit>; 67; ROOT; CONST_SIGNAL_REAL_ZERO name is: '0.0'; 
2022-11-03 00:02:14,655; 158 ; TRACE; THREAD: main; XStlContext.java; <clinit>; 69; ROOT; CONST_SIGNAL_REAL_ONE name is: '1.0'; 
2022-11-03 00:02:14,656; 159 ; TRACE; THREAD: main; XStlContext.java; <clinit>; 71; ROOT; CONST_SIGNAL_REAL_TWO name is: '2.0'; 
2022-11-03 00:02:14,659; 162 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 94; ROOT; SPEC SPEC unnamed; 
2022-11-03 00:02:14,660; 163 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit StlSpecification 'unnamed' key= 'null'; 
2022-11-03 00:02:14,660; 163 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 154; ROOT;  visit list 'definitions' key= '( def_d0)'; 
2022-11-03 00:02:14,660; 163 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 116; ROOT;  visit defVar 'd0': type is real  key= 'def_d0'; 
2022-11-03 00:02:14,660; 163 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 154; ROOT;  visit list 'assertions' key= '( assertion_prop)'; 
2022-11-03 00:02:14,660; 163 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit assertion 'prop' key= 'assertion_prop'; 
2022-11-03 00:02:14,661; 164 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit id 'prop' key= 'prop'; 
2022-11-03 00:02:14,661; 164 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit propOpUnary 'always' key= '(always (and (<= d0 (-_unary 1.1782864750394109)) (>= d0 (-_unary (-_unary 1.0034337669333486)))))'; 
2022-11-03 00:02:14,661; 164 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 154; ROOT;  visit list 'operands' key= '( (and (<= d0 (-_unary 1.1782864750394109)) (>= d0 (-_unary (-_unary 1.0034337669333486)))))'; 
2022-11-03 00:02:14,661; 164 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit propOpBinary 'and' key= '(and (<= d0 (-_unary 1.1782864750394109)) (>= d0 (-_unary (-_unary 1.0034337669333486))))'; 
2022-11-03 00:02:14,661; 164 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 154; ROOT;  visit list 'operands' key= '( (<= d0 (-_unary 1.1782864750394109)) (>= d0 (-_unary (-_unary 1.0034337669333486))))'; 
2022-11-03 00:02:14,662; 165 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit comparison '<=' key= '(<= d0 (-_unary 1.1782864750394109))'; 
2022-11-03 00:02:14,662; 165 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 292; ROOT;  visit symLink 'd0' key= 'd0'; 
2022-11-03 00:02:14,662; 165 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit exprOpUnary '-_unary' key= '(-_unary 1.1782864750394109)'; 
2022-11-03 00:02:14,662; 165 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 154; ROOT;  visit list 'operands' key= '( 1.1782864750394109)'; 
2022-11-03 00:02:14,662; 165 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 171; ROOT;  visitExprLiteral literalREAL 'real1.1782864750394109' key= '1.1782864750394109'; 
2022-11-03 00:02:14,663; 166 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 196; ROOT;  signal added asociated to the key: '1.1782864750394109'; 
2022-11-03 00:02:14,663; 166 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit comparison '>=' key= '(>= d0 (-_unary (-_unary 1.0034337669333486)))'; 
2022-11-03 00:02:14,663; 166 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 292; ROOT;  visit symLink 'd0' key= 'd0'; 
2022-11-03 00:02:14,663; 166 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit exprOpUnary '-_unary' key= '(-_unary (-_unary 1.0034337669333486))'; 
2022-11-03 00:02:14,663; 166 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 154; ROOT;  visit list 'operands' key= '( (-_unary 1.0034337669333486))'; 
2022-11-03 00:02:14,663; 166 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 78; ROOT;  visit exprOpUnary '-_unary' key= '(-_unary 1.0034337669333486)'; 
2022-11-03 00:02:14,663; 166 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 154; ROOT;  visit list 'operands' key= '( 1.0034337669333486)'; 
2022-11-03 00:02:14,663; 166 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 171; ROOT;  visitExprLiteral literalREAL 'real1.0034337669333486' key= '1.0034337669333486'; 
2022-11-03 00:02:14,664; 167 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 196; ROOT;  signal added asociated to the key: '1.0034337669333486'; 
2022-11-03 00:02:14,664; 167 ; TRACE; THREAD: main; VisitorCompileContext.java; visit; 154; ROOT;  visit list 'measurements' key= '()'; 
2022-11-03 00:02:14,664; 167 ; INFO ; THREAD: main; VcdBasicCompiler.java; parseBiggerPart; 213; ROOT; am I EDT? = false; 
2022-11-03 00:02:14,682; 185 ; INFO ; THREAD: Thread-1; Scope.java; addSignalToScope; 35; ROOT; scop = sincos500 add signal signal {d0, has 0 samples}; 
2022-11-03 00:02:14,682; 185 ; INFO ; THREAD: Thread-0; VcdBasicCompiler.java; doInBackground; 129; ROOT; am I EDT? = false; 
2022-11-03 00:02:14,682; 185 ; INFO ; THREAD: Thread-1; Scope.java; addSignalToScope; 35; ROOT; scop = sincos500 add signal signal {d1, has 0 samples}; 
2022-11-03 00:02:14,683; 186 ; INFO ; THREAD: Thread-0; VcdBasicCompiler.java; doInBackground; 136; ROOT; am I EDT? = false; 
2022-11-03 00:02:15,683; 1186; INFO ; THREAD: Thread-0; VcdBasicCompiler.java; doInBackground; 136; ROOT; am I EDT? = false; 
2022-11-03 00:02:16,686; 2189; INFO ; THREAD: Thread-0; VcdBasicCompiler.java; doInBackground; 136; ROOT; am I EDT? = false; 
2022-11-03 00:02:17,687; 3190; INFO ; THREAD: Thread-0; VcdBasicCompiler.java; doInBackground; 136; ROOT; am I EDT? = false; 
2022-11-03 00:02:18,688; 4191; INFO ; THREAD: Thread-0; VcdBasicCompiler.java; doInBackground; 136; ROOT; am I EDT? = false; 
2022-11-03 00:02:19,688; 5191; INFO ; THREAD: Thread-0; VcdBasicCompiler.java; doInBackground; 136; ROOT; am I EDT? = false; 
2022-11-03 00:02:20,689; 6192; INFO ; THREAD: Thread-0; VcdBasicCompiler.java; doInBackground; 136; ROOT; am I EDT? = false; 
2022-11-03 00:02:21,691; 7194; INFO ; THREAD: Thread-0; VcdBasicCompiler.java; doInBackground; 136; ROOT; am I EDT? = false; 
2022-11-03 00:02:21,948; 7451; TRACE; THREAD: main; VisitorEvalContext.java; visit; 105; ROOT;  XStlNode type is StlSpecification 'unnamed' key= 'null'; 
2022-11-03 00:02:21,948; 7451; TRACE; THREAD: main; VisitorEvalContext.java; visit; 105; ROOT;  XStlNode type is list 'definitions' key= '( def_d0)'; 
2022-11-03 00:02:21,948; 7451; TRACE; THREAD: main; VisitorEvalContext.java; visit; 105; ROOT;  XStlNode type is list 'assertions' key= '( assertion_prop)'; 
2022-11-03 00:02:21,948; 7451; TRACE; THREAD: main; VisitorEvalContext.java; visit; 340; ROOT; symLink 'd0' key= 'd0'; 
2022-11-03 00:02:21,949; 7452; TRACE; THREAD: main; VisitorEvalContext.java; visit; 316; ROOT; exprOpUnary '-_unary' key= '(-_unary 1.1782864750394109)'; 
2022-11-03 00:02:21,967; 7470; TRACE; THREAD: main; OperatorFactory.java; getAbstractBinaryOperator; 436; ROOT; jamtSignal.ContinuousRealSignal LESSEREQUAL jamtSignal.constant.ConstantRealSignal; 
2022-11-03 00:02:21,970; 7473; DEBUG; THREAD: main; LinearInterpolation.java; constantComparisonOperationHelper; 432; ROOT; operationName: LESSEQUAL, retSignal:'(d0 <= MINUS(1.1782864750394109))'; 
2022-11-03 00:02:22,025; 7528; DEBUG; THREAD: main; AbstractBinaryOperator.java; compute; 52; ROOT; Computed signal (d0 <= MINUS(1.1782864750394109)), samples: signal {(d0 <= MINUS(1.1782864750394109)), has 1 samples}: {[0.0,9.99999E17)=false} ; 
2022-11-03 00:02:22,025; 7528; TRACE; THREAD: main; VisitorEvalContext.java; visit; 340; ROOT; symLink 'd0' key= 'd0'; 
2022-11-03 00:02:22,025; 7528; TRACE; THREAD: main; VisitorEvalContext.java; visit; 316; ROOT; exprOpUnary '-_unary' key= '(-_unary (-_unary 1.0034337669333486))'; 
2022-11-03 00:02:22,025; 7528; TRACE; THREAD: main; VisitorEvalContext.java; visit; 316; ROOT; exprOpUnary '-_unary' key= '(-_unary 1.0034337669333486)'; 
2022-11-03 00:02:22,026; 7529; TRACE; THREAD: main; OperatorFactory.java; getAbstractBinaryOperator; 436; ROOT; jamtSignal.ContinuousRealSignal GREATEREQUAL jamtSignal.constant.ConstantRealSignal; 
2022-11-03 00:02:22,027; 7530; DEBUG; THREAD: main; LinearInterpolation.java; constantComparisonOperationHelper; 432; ROOT; operationName: GREATEREQUAL, retSignal:'(d0 >= MINUS(MINUS(1.0034337669333486)))'; 
2022-11-03 00:02:22,096; 7599; DEBUG; THREAD: main; AbstractBinaryOperator.java; compute; 52; ROOT; Computed signal (d0 >= MINUS(MINUS(1.0034337669333486))), samples: signal {(d0 >= MINUS(MINUS(1.0034337669333486))), has 1 samples}: {[0.0,9.99999E17)=false} ; 
2022-11-03 00:02:22,097; 7600; TRACE; THREAD: main; OperatorFactory.java; getAbstractBinaryOperator; 436; ROOT; jamtSignal.ContinuousBoolSignal AND jamtSignal.ContinuousBoolSignal; 
2022-11-03 00:02:22,098; 7601; DEBUG; THREAD: main; AbstractBinaryOperator.java; compute; 52; ROOT; Computed signal ((d0 <= MINUS(1.1782864750394109)) and (d0 >= MINUS(MINUS(1.0034337669333486)))), samples: signal {((d0 <= MINUS(1.1782864750394109)) and (d0 >= MINUS(MINUS(1.0034337669333486)))), has 1 samples}: {[0.0,9.99999E17)=false} ; 
2022-11-03 00:02:22,099; 7602; TRACE; THREAD: main; VisitorEvalContext.java; visit; 105; ROOT;  XStlNode type is list 'measurements' key= '()'; 
2022-11-03 00:02:22,100; 7603; TRACE; THREAD: main; AssertionReportGenerator.java; visit; 189; ROOT; DIAG Visited a Stl List; 
2022-11-03 00:02:22,100; 7603; TRACE; THREAD: main; AssertionReportGenerator.java; visit; 171; ROOT; DIAG Visited a Stl ID; 
2022-11-03 00:02:22,100; 7603; TRACE; THREAD: main; AssertionReportGenerator.java; visit; 189; ROOT; DIAG Visited a Stl List; 
2022-11-03 00:02:22,100; 7603; TRACE; THREAD: main; AssertionReportGenerator.java; visit; 189; ROOT; DIAG Visited a Stl List; 
