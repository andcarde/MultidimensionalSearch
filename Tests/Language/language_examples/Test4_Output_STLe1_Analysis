
· Analysis of:
(state0) prop1 := not F [4, ta] s2 U [inicio, ta] on [p1, ta] Int not signal1 + elec_gasto < 4 * 8;

· Step 1
Given:
    NUMBER_OR_ID: ID | NUMBER
    INTVL: LBRACKET NUMBER_OR_ID COMMA NUMBER_OR_ID RBRACKET
We have:
    INTVL interval1 = [4, ta]
    INTVL interval2 = [p1, ta]
    INTVL interval3 = [p1, ta]
Then:
    (state1) prop1 := not F <INTVL> s2 U <INTVL> on <INTVL> Int not signal1 + elec_gasto < 4 * 8;

· Step 2
Given:
    FUNC : FUNC BIN_COND FUNC
    BIN_COND : LESS
    FUNC : FUNC BIN_OP FUNC
    BIN_OP : PLUS
    BIN_OP : TIMES
    FUNC : SIG
    SIG: ID
    SIG: CONSTANT_SIGNAL
    CONSTANT_SIGNAL: NUMBER
We have:
    FUNC function1 = signal1 + elec_gasto < 4 * 8
Then:
    (state2) prop1 := not F <INTVL> s2 U <INTVL> on <INTVL> Int not <FUNC>;

· Step 3
Given:
    PHI : F INTVL PHI
    PHI : PHI UNTIL INTVL PHI
    PHI : ON INTVL PSI
    PSI : INT PHI
    PHI: NOT PHI
    PHI : FUNC
We have:
    PHI phi1 = on <INTVL> Int not <FUNC>
Then:
    (state3) prop1 := not F <INTVL> s2 U <INTVL> <PHI>;

· Step 4
Given:
    PHI : PHI U INTVL PHI
    PHI: NOT PHI
    PHI : F INTVL PHI
    PHI : FUNC
    FUNC : SIG
    SIG : ID
We have:
    PHI phi2 = not F <INTVL> s2 U <INTVL> <PHI>
Then:
    (state4) prop1 := <PHI>;

· Step 5
Given:
    PROP: ID ASSIGNMENT PHI SEMICOLON
We have:
    <PROP> property1 = prop1 := <PHI>;
Then:
    (state4)  <PROP>