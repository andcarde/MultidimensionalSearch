G not F [4, ta] x1 until [inicio, ta] on [p1, ta] int x0 + x2 < 4 * 8

G NOT F LBRACKET NUMBER COMMA ID RBRACKET ID U LBRACKET ID COMMA ID RBRACKET ON LBRACKET ID COMMA ID RBRACKET INT NOT ID BIN_OP ID BIN_COND NUMBER BIN_OP NUMBER
((G (NOT (F (LBRACKET NUMBER COMMA ID RBRACKET) ID))) U (LBRACKET ID COMMA ID RBRACKET) (ON (LBRACKET ID COMMA ID RBRACKET) (INT (NOT ((ID BIN_OP ID) BIN_COND (CONSTANT_SIGNAL BIN_OP CONSTANT_SIGNAL))))))
((G (NOT (F (LBRACKET NUMBER_OR_ID COMMA NUMBER_OR_ID RBRACKET) ID)))) U (LBRACKET NUMBER_OR_ID COMMA NUMBER_OR_ID RBRACKET) (ON (LBRACKET NUMBER_OR_ID COMMA NUMBER_OR_ID RBRACKET) (INT ((ID BIN_OP ID) BIN_COND (CONSTANT_SIGNAL BIN_OP CONSTANT_SIGNAL))))

((G (NOT (F INTVL ID))) U INTVL (ON INTVL (INT ((ID BIN_OP ID) BIN_COND (NUMBER BIN_OP NUMBER))))
((G (NOT (F INTVL ID))) U INTVL (ON INTVL (INT ((ID BIN_OP ID) BIN_COND (CONSTANT_SIGNAL BIN_OP CONSTANT_SIGNAL))))
((G (NOT (F INTVL ID))) U INTVL (ON INTVL (INT ((SIG BIN_OP SIG) BIN_COND (SIG BIN_OP SIG)))))
((G (NOT (F INTVL ID))) U INTVL (ON INTVL (INT ((FUNC BIN_OP SIG) BIN_COND (FUNC BIN_OP FUNC)))))
((G (NOT (F INTVL SIG))) U INTVL (ON INTVL (INT (FUNC BIN_COND FUNC))))
((G (NOT (F INTVL FUNC))) U INTVL (ON INTVL (INT (FUNC))))
((G (NOT (F INTVL PHI))) U INTVL (ON INTVL (INT (PHI))))
((G (NOT PHI)) U INTVL (ON INTVL (INT PHI)))
((G PHI) U INTVL (ON INTVL PSI))
(PHI U INTVL PHI)
PHI